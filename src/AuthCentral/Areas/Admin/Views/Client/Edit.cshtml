@using IdentityServer3.Core.Models
@model Fsw.Enterprise.AuthCentral.Areas.Admin.Models.ClientModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_ClientAdminLayout.cshtml";
    ViewBag.Title = "Edit Client";

}

@using (Html.BeginForm("Save", "Client", new { clientId = Model.ClientId, area = "Admin" }, FormMethod.Post, new { @id="edit-form", @class = "form-horizontal"} )) 
{   
    @Html.AntiForgeryToken()
   <div class="form-group">
       <div class="col-md-offset-2 col-md-2">
           <input type="button" value="Save" class="btn btn-success" onclick="javascript: document.forms['edit-form'].submit();" />
       </div>
       <div class="col-md-6"></div>
       <div class="col-md-2">
           <input type="button" value="Delete" class="btn btn-warning" onclick="javascript: document.forms['edit-form'].action = '/admin/client/delete/@Model.ClientId'; document.forms['edit-form'].submit();" />
       </div>
       <dev class="col-md-10"></dev>
   </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExistingClient.Enabled, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.ExistingClient.Enabled, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExistingClient.Enabled)
        </div>
    </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ClientId, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @if(!String.IsNullOrWhiteSpace(Model.ClientId))
           {
                @Html.TextBoxFor(model => model.ClientId, new { @class="form-control",  @placeholder="new_application_clientid", @disabled="disabled" })
           }
           else
           {
                @Html.TextBoxFor(model => model.ClientId, new {@class="form-control",  @placeholder="new_application_clientid"})
           }
           @Html.ValidationMessageFor(model => model.ClientId)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ClientName, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ClientName, new {@class="form-control",  @placeholder="New Application"})
           @Html.ValidationMessageFor(model => model.ClientName)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ClientUri, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ClientUri, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ClientUri)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.LogoUri, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.LogoUri, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.LogoUri)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.RequireConsent, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.RequireConsent, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.RequireConsent)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AllowRememberConsent, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.AllowRememberConsent, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.AllowRememberConsent)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.Flow, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.DropDownListFor(model => model.ExistingClient.Flow, Html.GetEnumSelectList<Flows>(), new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.Flow)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AllowClientCredentialsOnly, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.AllowClientCredentialsOnly, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.AllowClientCredentialsOnly)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.IdentityTokenLifetime, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ExistingClient.IdentityTokenLifetime, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.IdentityTokenLifetime)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AccessTokenLifetime, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ExistingClient.AccessTokenLifetime, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.AccessTokenLifetime)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AuthorizationCodeLifetime, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ExistingClient.AuthorizationCodeLifetime, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.AuthorizationCodeLifetime)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AbsoluteRefreshTokenLifetime, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ExistingClient.AbsoluteRefreshTokenLifetime, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.AbsoluteRefreshTokenLifetime)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.SlidingRefreshTokenLifetime, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.TextBoxFor(model => model.ExistingClient.SlidingRefreshTokenLifetime, new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.SlidingRefreshTokenLifetime)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AllowAccessToAllScopes, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.AllowAccessToAllScopes, new {@class="checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.AllowAccessToAllScopes)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.RefreshTokenUsage, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.DropDownListFor(model => model.ExistingClient.RefreshTokenUsage, Html.GetEnumSelectList<TokenUsage>(), new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.RefreshTokenUsage)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.UpdateAccessTokenClaimsOnRefresh, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.UpdateAccessTokenClaimsOnRefresh, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.UpdateAccessTokenClaimsOnRefresh)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.RefreshTokenExpiration, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.DropDownListFor(model => model.ExistingClient.RefreshTokenExpiration, Html.GetEnumSelectList<TokenExpiration>(), new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.RefreshTokenExpiration)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AccessTokenType, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.DropDownListFor(model => model.ExistingClient.AccessTokenType, Html.GetEnumSelectList<AccessTokenType>(), new {@class="form-control"})
           @Html.ValidationMessageFor(model => model.ExistingClient.AccessTokenType)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.EnableLocalLogin, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.EnableLocalLogin, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.EnableLocalLogin)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.IncludeJwtId, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.IncludeJwtId, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.IncludeJwtId)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AlwaysSendClientClaims, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.AlwaysSendClientClaims, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.AlwaysSendClientClaims)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.PrefixClientClaims, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.PrefixClientClaims, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.PrefixClientClaims)
       </div>
   </div>

   <div class="form-group">
       @Html.LabelFor(model => model.ExistingClient.AllowAccessToAllCustomGrantTypes, new { @class = "control-label col-md-2" })
       <div class="col-md-10">
           @Html.CheckBoxFor(model => model.ExistingClient.AllowAccessToAllCustomGrantTypes, new {@class= "checkbox" })
           @Html.ValidationMessageFor(model => model.ExistingClient.AllowAccessToAllCustomGrantTypes)
       </div>
   </div>

   <div class="form-group">
       <div class="col-md-offset-2 col-md-2">
           <input type="button" value="Save" class="btn btn-success" onclick="javascript: document.forms['edit-form'].submit();" />
       </div>
       <div class="col-md-6"></div>
       <div class="col-md-2">
           <input type="button" value="Delete" class="btn btn-warning" onclick="javascript: document.forms['edit-form'].action = '/admin/client/delete'; document.forms['edit-form'].submit();" />
       </div>
   </div>

}
<hr />
